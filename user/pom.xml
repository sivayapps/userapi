<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.boshanam</groupId>
	<artifactId>user</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>UserManager</name>
	<description>Maintaining Administering Users</description>
	<profiles>
		<profile>
			<id>classic</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>user-core</module>
				<module>user-ui-core</module>
				<module>user-ui</module>
				<module>user-core-classic-impl</module>
			</modules>
		</profile>
		<profile>
			<id>google</id>
			<modules>
				<module>user-core</module>
				<module>user-ui-core</module>
				<module>user-ui</module>
				<module>user-core-google-impl</module>
			</modules>
		</profile>
		<profile>
			<id>quick</id>
			<modules>
				<module>user-core</module>
				<module>user-ui-core</module>
				<module>user-core-classic-impl</module>
			</modules>
		</profile>
		<profile>
			<id>googleQ</id>
			<modules>
				<module>user-core</module>
				<module>user-ui-core</module>
				<module>user-core-google-impl</module>
			</modules>
		</profile>
	</profiles>

	<developers>
		<developer>
			<id>sivayapps</id>
			<name>Sivakumar Y</name>
			<email>sivayapps@gmail.com</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:svn:https://timextrack.googlecode.com/svn/trunk/timextrack</connection>
		<developerConnection>scm:svn:https://timextrack.googlecode.com/svn/trunk/timextrack</developerConnection>
		<tag>HEAD</tag>
		<url>http://code.google.com/p/timextrack/source/browse/</url>
	</scm>

	<issueManagement>
		<system>Google Code</system>
		<url>http://code.google.com/p/timextrack/issues</url>
	</issueManagement>

	<properties>

		<user-core.version>${project.version}</user-core.version>
		<user-ui-core.version>${project.version}</user-ui-core.version>
		<user-core-classic-impl.version>${project.version}</user-core-classic-impl.version>
		<user-core-google-impl.version>${project.version}</user-core-google-impl.version>

		<spring.version>3.1.0.RELEASE</spring.version>
		<jackson-mapper-asl.version>1.9.1</jackson-mapper-asl.version>
		<dozer.version>5.3.2</dozer.version>
		<joda-time.version>1.6.2</joda-time.version>
		<validation-api.version>1.0.0.GA</validation-api.version>
		<hibernate-validator.version>4.2.0.Final</hibernate-validator.version>

		<!-- Convenience property to set the GWT version -->
		<gwt.version>2.4.0</gwt.version>
		<smartgwt.version>3.0</smartgwt.version>

		<gae.version>1.6.3</gae.version>
		<gae.application.version>ac152a43</gae.application.version>
		<maven-gae-plugin.version>0.9.2</maven-gae-plugin.version>

		<!-- GWT needs at least java 1.5 -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

		<!-- Plugin properties -->
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<maven-war-plugin.version>2.1.1</maven-war-plugin.version>

		<!-- Other configuration -->
		<!-- PRETTY style during development, <profiles> used to configure other 
			styles -->
		<gwt.style>PRETTY</gwt.style>

		<slf4f.version>1.6.3</slf4f.version>
		<log4j.version></log4j.version>

		<hsqldb.version>1.8.0.10</hsqldb.version> <!-- 2.0.0 -->
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${gwt-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>smartclient</id>
			<name>smartclient.com</name>
			<url>http://www.smartclient.com/maven2</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Many software projects using Maven declare commons-logging as a dependency. 
			Thus, if you wish to migrate to SLF4J or use jcl-over-slf4j, you would need 
			to declare a commons-logging exclusion in all of your dependencies which 
			transitively depend on commons-logging. This can be an error prone process. 
			To alleviate the pain, Erik van Oosten has developed a clever hack around 
			this problem. Alternatively, commons-logging can be rather simply and conveniently 
			excluded as a dependency by declaring it in the provided scope within the 
			pom.xml file of your project. The actual commons-logging classes would be 
			provided by jcl-over-slf4j. -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4f.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4f.version}</version>
			<type>jar</type>
		</dependency>

		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> 
			<version>1.5.8</version> </dependency> -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-jdk14</artifactId> 
			<version>${slf4f.version}</version> </dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4f.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<exclusions>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>${dozer.version}</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<!-- Embedded database for Testing -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>

			<!-- GWT and smart GWT dependencies -->
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-servlet</artifactId>
				<version>${gwt.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwt.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.smartgwt</groupId>
				<artifactId>smartgwt</artifactId>
				<version>${smartgwt.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.smartgwt</groupId>
				<artifactId>smartgwt-skins</artifactId>
				<version>${smartgwt.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson-mapper-asl.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

</project>