<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="googleDsEMF" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
<!-- 
**This below Configuration is causing the Exception at Runtime 

**java.lang.NoClassDefFoundError: org/aspectj/weaver/BCException
**at java.lang.Class.privateGetDeclaredMethods(Class.java:2427)
**at java.lang.Class.getDeclaredMethods(Class.java:1791)
**at org.springframework.core.type.StandardAnnotationMetadata.hasAnnotatedMethods(StandardAnnotationMetadata.java:136)

**So Switched to Transaction @Transactional Annotational style configuration

**@TODO need to analyse and understand the root cause of this issue

	<tx:advice id="txAdvice" transaction-manager="txManager">
		the transactional semantics...
		<tx:attributes>
			all methods starting with 'get' are read-only
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			other methods use the default transaction settings (see below)
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface
	<aop:config>
		<aop:pointcut id="personServiceOperation"
			expression="execution(* com.boshanam.user.core.service.impl.PersonServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="personServiceOperation" />
	</aop:config>

 -->
 
 
	<bean id="googleDsEMF"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName"
			value="transactional_ds_non_transactional_ops_allowed" />
	</bean>

	<!-- ############# DAO bean definitions - START ################### -->
	<bean id="personDaoGoogleDsImpl"
		class="com.boshanam.user.core.persistence.dao.google.impl.PersonDaoGoogleImpl">
		<property name="entityManagerFactory" ref="googleDsEMF"></property>
	</bean>

	<bean id="privilegeDaoGoogleDsImpl"
		class="com.boshanam.user.core.persistence.dao.google.impl.PrivilegeDaoGoogleImpl">
	</bean>

	<!-- ############## DAO bean definitions - END ############### -->

	<!-- ############# DAO bean definitions - START ################### -->
	<bean id="personService" class="com.boshanam.user.core.service.impl.PersonServiceImpl">
		<property name="personDao" ref="personDaoGoogleDsImpl" />
		<!-- Dozer mapper is defned in coreContext.xml in user-core module -->
		<property name="dozerMappingUtil" ref="dozerBeanMapperUtil" />
	</bean>

	<bean id="privilegeService"
		class="com.boshanam.user.core.service.impl.PrivilegeServiceImpl">
		<property name="privilegeDao" ref="privilegeDaoGoogleDsImpl" />
		<!-- Dozer mapper is defned in coreContext.xml in user-core module -->
		<property name="dozerMappingUtil" ref="dozerBeanMapperUtil" />
	</bean>


	<!-- ############## DAO bean definitions - END ############### -->

</beans>
