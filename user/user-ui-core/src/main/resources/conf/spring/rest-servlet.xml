<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd		
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- including version number in schema location xsd path causing xsd to 
		be tied to specific spring version and when we upgrade spring we need to 
		modify schema uri to reflect the new version, but as per spring team, we 
		can use uri's like spring-context.xsd (instead of spring-context-3.1.xsd), 
		xsd will be picked from current available jars, so based on jar version (spring 
		version) the referenced XSD will change, following this easy approach. -->

	<context:annotation-config />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- Jackson mapping config to set global date format, this config is 
				possible only from spring 3.1.0.RELEASE -->
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="jacksonObjectMapper" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- <annotation-driven /> -->
	<context:component-scan base-package="com.boshanam.user.autowired" />

</beans>
